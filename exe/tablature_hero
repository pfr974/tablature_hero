#!/usr/bin/env ruby

# frozen_string_literal: true

$LOAD_PATH.unshift File.join(File.dirname(__FILE__), "..", "lib")

require "tablature_hero"
require "curses"

def play(filename)
  path = File.join(File.dirname(__FILE__), "..", "media", filename)
  `afplay #{path}.mp3`
end

time_signatures = {
  "2/4" => %i[high low],
  "3/4" => %i[high low low],
  "4/4" => %i[high low low low],
  "5/4" => %i[high low low low low],
  "6/8" => %i[high low low high low low]
}

tempo = ARGV.shift.chomp
time_signature = time_signatures[ARGV.shift.chomp]

unless tempo && time_signature
  puts "Usage tablature_hero tempo time_signature"
  puts "Ex: tablature_hero 60 4/4"
  exit 1
end
beat_duration = 60.0 / tempo.to_i

# Curses settings
Curses.init_screen
Curses.start_color
Curses.curs_set(0)
Curses.noecho

Curses.init_pair(0, 0, 0) # white
Curses.init_pair(2, 2, 0) # green
Curses.init_pair(5, 5, 0) # magenta
Curses.init_pair(6, 6, 0) # cyan
Curses.init_pair(8, 8, 0) # grey
Curses.init_pair(9, 9, 0) # orange
Curses.init_pair(11, 11, 0) # yellow

window = Curses::Window.new(0, 0, 1, 2)
window.nodelay = true

current_bar = time_signature.clone
loop do
  window.setpos(0, 0)
  6.times do
    window << "|" if current_bar == time_signature
    current_bar.each { |_note| window << "--" }
    10.times do
      window << "|"
      time_signature.each { |_note| window << "--" }
    end
    window << "\n"
  end
  (window.maxy - window.cury).times { window.deleteln }
  window.refresh

  note = current_bar.shift
  Thread.new { play("metro_#{note}") }

  case window.getch.to_s
  when "q"
    break
  end
  sleep beat_duration
  current_bar = time_signature.clone if current_bar.empty?
end
